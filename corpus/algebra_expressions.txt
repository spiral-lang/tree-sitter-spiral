
============================================
Unary operation
============================================
-1;
3-;
3x-;
hghg{}!;
*jhj()();
x+;
*(3+1);
*xdd.xxa;
xkd.sdasd&;
kjkj::ghfhf!;
+++!!!::self;
(ld, _, sad)*?;
&s!;

---

(source_file
    (algebra_operation (ambiguous_unary_binary_operator) (natural_number (arabic_natural_number)))
    (algebra_operation (natural_number (arabic_natural_number)) (ambiguous_unary_binary_operator))
    (algebra_operation (product_expression (natural_number (arabic_natural_number)) (ident)) (ambiguous_unary_binary_operator))
    (algebra_operation (build (ident) (braces_object)) (exclusive_unary_operator))
    (algebra_operation (ambiguous_unary_binary_operator) (call (call (ident) (bracket_object)) (bracket_object)))
    (algebra_operation (ident) (ambiguous_unary_binary_operator))
    (algebra_operation (ambiguous_unary_binary_operator) (bracket_object (algebra_operation (natural_number (arabic_natural_number)) (ambiguous_unary_binary_operator) (natural_number (arabic_natural_number)))))
    (algebra_operation (ambiguous_unary_binary_operator) (dot_expression (ident) (ident)))
    (algebra_operation (dot_expression (ident) (ident)) (ambiguous_unary_binary_operator))
    (algebra_operation (simple_path (ident) (ident)) (exclusive_unary_operator))
    (algebra_operation (ambiguous_unary_binary_operator) (algebra_operation (ambiguous_unary_binary_operator) (algebra_operation (ambiguous_unary_binary_operator) (algebra_operation (exclusive_unary_operator) (algebra_operation (exclusive_unary_operator) (algebra_operation (exclusive_unary_operator) (self_path)))))))
    (algebra_operation (algebra_operation (bracket_object (ident) (ident) (ident)) (ambiguous_unary_binary_operator)) (exclusive_unary_operator))
    (algebra_operation (algebra_operation (ambiguous_unary_binary_operator) (ident)) (exclusive_unary_operator))
)



============================================
Binary operation
============================================
3.23 + 2;
3'e+50 + i;
3'e+50 - 3i;
3x + 8;
hghg() - 6 - 8 -9 +1 -(-4);
sdsd::sads.`5454` + 38;

---

(source_file
    (algebra_operation (decimal_literal (fraction_literal (arabic_natural_number) (arabic_natural_number))) (ambiguous_unary_binary_operator) (natural_number (arabic_natural_number)))
    (algebra_operation (decimal_literal (natural_fraction_literal (arabic_natural_number) (fractional_unit_suffix (exponent (arabic_natural_number))))) (ambiguous_unary_binary_operator) (ident))
    (algebra_operation (decimal_literal (natural_fraction_literal (arabic_natural_number) (fractional_unit_suffix (exponent (arabic_natural_number))))) (ambiguous_unary_binary_operator) (product_expression (natural_number (arabic_natural_number)) (ident)))
    (algebra_operation (product_expression (natural_number (arabic_natural_number)) (ident)) (ambiguous_unary_binary_operator) (natural_number (arabic_natural_number)))
    (algebra_operation (algebra_operation (algebra_operation (algebra_operation (algebra_operation (call (ident) (bracket_object)) (ambiguous_unary_binary_operator) (natural_number (arabic_natural_number))) (ambiguous_unary_binary_operator) (natural_number (arabic_natural_number))) (ambiguous_unary_binary_operator) (natural_number (arabic_natural_number))) (ambiguous_unary_binary_operator) (natural_number (arabic_natural_number))) (ambiguous_unary_binary_operator) (bracket_object (algebra_operation (ambiguous_unary_binary_operator) (natural_number (arabic_natural_number)))))
    (algebra_operation (dot_expression (simple_path (ident) (ident)) (string_literal)) (ambiguous_unary_binary_operator) (natural_number (arabic_natural_number)))
)


============================================
Ambiguity operations
============================================
3.23* + 2;
-3x- + 8;
!asd + asd!;
(sd, _, 30)? | *(1, 1, 1) & &(2,3,2);
path::aasd? + *(3++5);
3+5+;
---

(source_file
    (algebra_operation (algebra_operation (decimal_literal (fraction_literal (arabic_natural_number) (arabic_natural_number))) (ambiguous_unary_binary_operator)) (ambiguous_unary_binary_operator) (natural_number (arabic_natural_number)))
    (algebra_operation (algebra_operation (algebra_operation (ambiguous_unary_binary_operator) (product_expression (natural_number (arabic_natural_number)) (ident))) (ambiguous_unary_binary_operator)) (ambiguous_unary_binary_operator) (natural_number (arabic_natural_number)))
    (algebra_operation (algebra_operation (algebra_operation (exclusive_unary_operator) (ident)) (ambiguous_unary_binary_operator) (ident)) (exclusive_unary_operator))
    (algebra_operation (algebra_operation (algebra_operation (algebra_operation (bracket_object (ident) (ident) (natural_number (arabic_natural_number))) (exclusive_unary_operator)) (exclusive_binary_operator) (algebra_operation (ambiguous_unary_binary_operator) (bracket_object (natural_number (arabic_natural_number)) (natural_number (arabic_natural_number)) (natural_number (arabic_natural_number))))) (ambiguous_unary_binary_operator)) (ambiguous_unary_binary_operator) (bracket_object (natural_number (arabic_natural_number)) (natural_number (arabic_natural_number)) (natural_number (arabic_natural_number))))
    (algebra_operation (algebra_operation (algebra_operation (simple_path (ident) (ident)) (exclusive_unary_operator)) (ambiguous_unary_binary_operator)) (ambiguous_unary_binary_operator) (bracket_object (algebra_operation (algebra_operation (natural_number (arabic_natural_number)) (ambiguous_unary_binary_operator)) (ambiguous_unary_binary_operator) (natural_number (arabic_natural_number)))))
    (algebra_operation (algebra_operation (natural_number (arabic_natural_number)) (ambiguous_unary_binary_operator) (natural_number (arabic_natural_number))) (ambiguous_unary_binary_operator))
)

====================================================
Pipe  operation
====================================================
3 |> wsd;
(877 + 68meter) |> saadss |> 12.26;
---
(source_file
    (algebra_operation (natural_number (arabic_natural_number)) (special_operator) (ident))
    (algebra_operation (algebra_operation (bracket_object (algebra_operation (natural_number (arabic_natural_number)) (ambiguous_unary_binary_operator) (product_expression (natural_number (arabic_natural_number)) (ident)))) (special_operator) (ident)) (special_operator) (decimal_literal (fraction_literal (arabic_natural_number) (arabic_natural_number))))
 )

====================================================
morphism operation
====================================================
x -> askjdk;

---
(source_file
    (algebra_operation (ident) (special_operator) (ident))
)

====================================================
In operation
====================================================
y in z;
---
(source_file
    (algebra_operation (ident) (special_operator) (ident))
)

====================================================
NOT_IN operation
====================================================
y not in z;
---
(source_file
    (algebra_operation (ident) (special_operator) (ident))
)
====================================================
IS  operation
====================================================
y is z{@ name:number};

---
(source_file
    (algebra_operation (ident) (special_operator) (build (ident) (braces_object (key_tty_value (ident) (ident)))))
)

====================================================
IS_NOT operation
====================================================
y is not z;

---
(source_file
    (algebra_operation (ident) (special_operator) (ident))
)


====================================================
compact range
====================================================
4 < s > 4;

---

(source_file
    (algebra_operation (algebra_operation (natural_number (arabic_natural_number)) (comparison_operator) (ident)) (comparison_operator) (natural_number (arabic_natural_number)))
)
