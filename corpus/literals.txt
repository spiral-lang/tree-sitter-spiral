============================================
Natural number literals
============================================

0;
123;
4_125_223;
0xff;
0o70;
0b1111_1111_1001_0000;
1'E;
0b11______________'gigA;
2_____55__'PeTa;

---

(source_file
  (natural_number (arabic_natural_number))
  (natural_number (arabic_natural_number))
  (natural_number (arabic_natural_number))
  (natural_number (hexadecimal_natural_number))
  (natural_number (octal_natural_number))
  (natural_number (binary_natural_number))
  (natural_number (arabic_natural_number) (natural_unit_suffix))
  (natural_number (binary_natural_number) (natural_unit_suffix))
  (natural_number (arabic_natural_number) (natural_unit_suffix))
)

============================================
Decimal number literals
============================================

123.123;
200000000000.0;
12___001_1212.32__333_5;
12___001_1212.32__333_5'gIga;
12___001_1212.32__333_5'E;
0xff'nano;
0o70'mili;
0b1111_1111_1001_0000'μ;
12'e+12;
12'e+12_65;
0o70'e+000000000000000;
0.3141516'e-12_65;
---

(source_file
  (decimal_literal  (fraction_literal (arabic_natural_number) (arabic_natural_number)))
  (decimal_literal  (fraction_literal (arabic_natural_number) (arabic_natural_number)))
  (decimal_literal  (fraction_literal (arabic_natural_number) (arabic_natural_number)))
  (decimal_literal  (fraction_literal (arabic_natural_number) (arabic_natural_number) (natural_unit_suffix)))
  (decimal_literal  (fraction_literal (arabic_natural_number) (arabic_natural_number) (natural_unit_suffix)))
  (decimal_literal  (natural_fraction_literal (hexadecimal_natural_number) (fractional_unit_suffix)))
  (decimal_literal  (natural_fraction_literal (octal_natural_number) (fractional_unit_suffix)))
  (decimal_literal  (natural_fraction_literal (binary_natural_number) (fractional_unit_suffix)))
  (decimal_literal  (natural_fraction_literal (arabic_natural_number) (fractional_unit_suffix (exponent (arabic_natural_number)))))
  (decimal_literal  (natural_fraction_literal (arabic_natural_number) (fractional_unit_suffix (exponent (arabic_natural_number)))))
  (decimal_literal  (natural_fraction_literal (octal_natural_number) (fractional_unit_suffix (exponent (arabic_natural_number)))))
  (decimal_literal  (fraction_literal (arabic_natural_number) (arabic_natural_number) (fractional_unit_suffix (exponent (arabic_natural_number)))))
)


============================================
Boolean literals
============================================

true;
false;

---

(source_file (boolean_literal) (boolean_literal))


============================================
Character literals
============================================

'a';
'\'';
'\c';
'\`';
'\"';
'\0';
b'x';
'\t';
'\xff';
'\\';
'\u{1}';
'京';
'❤';
'\u3204';

---

(source_file
  (char_literal)
  (char_literal)
  (char_literal)
  (char_literal)
  (char_literal)
  (char_literal)
  (char_literal)
  (char_literal)
  (char_literal)
  (char_literal)
  (char_literal)
  (char_literal)
  (char_literal)
  (char_literal)

  )

============================================
String literals
============================================

``;
`abc`;
b`foo\nbar`;
`foo\
    bar`;
`\`foo\``;
`/* foo bar */ foo bar`;
`foo\x42\x43bar`;
`foo \x42  \x43 bar`;
`age: {60}`;
`\{saw\}`;

---

(source_file
  (string_literal)
  (string_literal)
  (string_literal (escape_sequence))
  (string_literal (escape_sequence))
  (string_literal (escape_sequence) (escape_sequence))
  (string_literal)
  (string_literal (escape_sequence) (escape_sequence))
  (string_literal (escape_sequence) (escape_sequence))
  (string_literal (template_substitution (natural_number (arabic_natural_number)) ))
  (string_literal (escape_sequence) (escape_sequence))

)
